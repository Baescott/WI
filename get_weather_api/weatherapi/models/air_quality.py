# -*- coding: utf-8 -*-

"""
    weatherapi

    #This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
    NO! I made it! yang926@naver.com
"""


from operator import index


class Air_quality(object):

    """Implementation of the 'air_quality' model.

    TODO: type model description here.

    Attributes:
        co (flaot): TODO: type model description here.
        no2 (float): TODO: type model description here.
        o3 (float): TODO: type model description here.
        so2 (flaot): TODO: type model description here.
        pm2_5 (float): TODO: type model description here.
        pm10 (float): TODO: type model description here.
        us-epa-index (int): TODO: type model description here.
        gb-defra-index (int): TODO: type model description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "co":'co',
        "no2":'no2',
        "o3":'o3',
        "so2":'so2',
        "pm2_5":'pm2_5',
        "pm10":'pm10',
        "us_epa_index":'us-epa-index',
        "gb_defra_index":'gb-defra-index'
    }

    def __init__(self,
                 co=None,
                 no2=None,
                 o3=None,
                 so2=None,
                 pm2_5=None,
                 pm10=None,
                 us_epa_index=None,
                 gb_defra_index=None
                 ):
        """Constructor for the Condition class"""

        # Initialize members of the class
        self.co = co
        self.no2 = no2
        self.o3  = o3
        self.so2 = so2
        self.pm2_5 = pm2_5
        self.pm10 = pm10
        self.us_epa_index= us_epa_index
        self.gb_defra_index = gb_defra_index


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        co = dictionary.get('co')
        no2 = dictionary.get('no2')
        o3 = dictionary.get('o3')
        so2 = dictionary.get('so2')
        pm2_5 = dictionary.get('pm2_5')
        pm10 = dictionary.get('pm10')
        us_epa_index = dictionary.get('us_epa_index')
        gb_defra_index = dictionary.get('gb_defra_index')

        # Return an object of this model
        return cls(co,
                   no2,
                   o3,
                   so2,
                   pm2_5,
                   pm10,
                   us_epa_index,
                   gb_defra_index)


